{"version":3,"sources":["webpack:///src/app/init-game-state.ts","webpack:///src/environments/environment.ts","webpack:///src/app/starter/starter.component.ts","webpack:///src/app/starter/starter.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/game-state.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/help/help.component.ts","webpack:///src/app/help/help.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["GAME_STATE","size","numOfPlayers","gameEnded","canRetract","turn","learningMode","tiles","availableMoves","preMoveTile","updatedIsValidTiles","environment","production","StarterComponent","router","gameStateService","sizeOptions","Array","keys","map","x","numOfPlayersOptions","getGameState","subscribe","gameState","initGameState","navigate","onNewGame","selector","templateUrl","styleUrls","AppComponent","title","GameStateService","providedIn","AppModule","declarations","imports","providers","bootstrap","HelpComponent","location","back","onGoBack","Coordinate","GameComponent","PLAYER_NAME","FOUR","length","EDGE_INDICES","i","row","j","tile","r","c","player","isValid","includes","isPartOfWinStreak","push","console","log","classes","playerStr","index","status","n","end","rowPositions","colPositions","rowOperators","colOperators","col","rowOptr","colOptr","_","curTile","hasWon","count","streakIndices","isOutOfBound","streakIndex","updateIsValid","checkWinCondition","fire","text","nextTurn","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","preTurn","arr","newArray","forEach","slice","onRetract","onLearningMode","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","relativeLinkResolution","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { GameState } from './game-state';\n\nexport const GAME_STATE: GameState = {\n    // Game Setting\n    size: 10,\n    numOfPlayers: 4,\n\n    // Game Status\n    gameEnded: false,\n    canRetract: false,\n    turn: 1,\n    learningMode: false,\n    tiles: [],\n    availableMoves: 10*10,\n\n    // For retract function\n    preMoveTile: null,\n    // Save tile's coordinates which the tile's isValid property is updated (to be valid)\n    updatedIsValidTiles: []\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { GameState } from '../game-state';\nimport { GameStateService } from '../game-state.service';\n\n@Component({\n  selector: 'app-starter',\n  templateUrl: './starter.component.html',\n  styleUrls: ['./starter.component.scss']\n})\n\nexport class StarterComponent implements OnInit {\n  sizeOptions: number[] = [...Array(5).keys()].map(x => x+=8)\n  numOfPlayersOptions: number[] = [...Array(5).keys()].map(x => x += 2)\n\n  gameState: GameState\n\n  \n  constructor(private router: Router,\n              private gameStateService: GameStateService) { }\n\n  ngOnInit() {\n    this.getGameState()\n  }\n\n  getGameState(): void {\n    this.gameStateService.getGameState()\n      .subscribe(gameState => this.gameState = gameState)\n  }\n  \n  onChooseSize(size: number) {\n    this.gameState.size = size\n  }\n\n  onChooseNumOfPlayers(numOfPlayers: number) {\n    this.gameState.numOfPlayers = numOfPlayers\n  }\n\n  initGameState() {\n    this.gameState.gameEnded = false\n    this.gameState.canRetract = false\n    this.gameState.turn = 1\n    this.gameState.tiles = []\n    this.gameState.availableMoves = this.gameState.size * this.gameState.size\n    this.gameState.preMoveTile = null\n    this.gameState.updatedIsValidTiles = []\n    // only leraning mode setting is kept\n  }\n\n  onNewGame() {\n    this.initGameState()\n    this.router.navigate(['/game'])\n  }\n}\n","<h1>4Gravity</h1>\n<section class=\"newGame\">\n    <div class=\"grid-x grid-padding-x\">\n        <div class=\"logo\">\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n        </div>\n    </div>\n    <div class=\"grid-x grid-padding-x\">\n        <div class=\"cell\">\n            <section class=\"setting\">\n                <div class=\"options-text\">Size of the board:</div>\n                <div class=\"size options grid-x grid-margin-x\">\n                    <div class=\"cell auto square\"\n                        *ngFor=\"let sizeOption of sizeOptions\" \n                        [ngClass]=\"{'selected': sizeOption == gameState.size}\"\n                        (click)=\"onChooseSize(sizeOption)\">\n                        <div class=\"option\"><span>{{ sizeOption }}x{{ sizeOption }}</span></div>\n                    </div>\n                </div>\n            </section>\n            <section class=\"setting\">\n                <div class=\"options-te t\">Number of Players:</div>\n                <div class=\"numOfPlayer options grid-x grid-margin-x\">\n                    <div class=\"cell auto square\" \n                        *ngFor=\"let numOfPlayersOption of numOfPlayersOptions\" \n                        [ngClass]=\"{selected: numOfPlayersOption == gameState.numOfPlayers}\"\n                        (click)=\"onChooseNumOfPlayers(numOfPlayersOption)\">\n                        <div class=\"option\"><span>{{ numOfPlayersOption }}</span></div>\n                    </div>\n                </div>\n            </section>\n            <div class=\"button new_game\" (click)=\"onNewGame()\">New Game</div>\n        </div>\n    </div>\n</section>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'four-gravity';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { GameState } from './game-state';\nimport { GAME_STATE } from './init-game-state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameStateService {\n\n  constructor() { }\n\n  getGameState(): Observable<GameState> {\n    return of(GAME_STATE)\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StarterComponent } from './starter/starter.component';\nimport { GameComponent } from './game/game.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HelpComponent } from './help/help.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StarterComponent,\n    GameComponent,\n    HelpComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor(private location: Location) { }\n\n  ngOnInit() {\n  }\n\n  onGoBack() {\n    this.location.back()\n  }\n}\n","<section class=\"howToPlay\">\n    <div class=\"grid-x grid-padding-x\">\n        <div class=\"cell\">\n            <h2>How to Play</h2>\n            <p>Welcome to the world with four directions of gravity! 4Gravity is a multiplayer game. 3-4 players are\n                recommended. First player to form a horizontal, vertical, or diagonal <strong>line of four\n                    tiles</strong> to win. You can only put a tile that is <strong>supported by at least one\n                    side</strong> of the grid. Tap on a tile to make a move!\n            </p>\n\n            <strong>Tips:</strong>\n            <ul>\n                <li>Turn on Learning Mode to view the available moves!</li>\n                <li>If you have a false move, tap on the \"Retract\" button to retract your move.</li>\n            </ul>\n\n            <div class=\"button\" (click)=\"onGoBack()\">Back</div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tile } from '../tile';\n\nimport { GameState } from '../game-state';\nimport { GameStateService } from '../game-state.service';\n\nimport Swal from 'sweetalert2';\n\nclass Coordinate {\n  r: number;\n  c: number;\n}\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\n\nexport class GameComponent implements OnInit {\n  PLAYER_NAME: string[] = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Purple\"]\n  FOUR: number = 4\n\n  gameState: GameState\n\n  constructor(private router: Router,\n              private gameStateService: GameStateService) { }\n\n\n  ngOnInit() {\n    // Get gameState\n    this.getGameState()\n    if (this.gameState.tiles.length == 0) {\n      const EDGE_INDICES = [0, this.gameState.size - 1]\n      for (let i of Array(this.gameState.size).keys()) {\n        let row = []\n        for (let j of Array(this.gameState.size).keys()) {\n          let tile: Tile = {\n            r: i,\n            c: j,\n            player: 0,\n            isValid: EDGE_INDICES.includes(i) || EDGE_INDICES.includes(j),\n            isPartOfWinStreak: false,\n          }\n          row.push(tile)\n        }\n        this.gameState.tiles.push(row)\n      }\n      console.log(this.gameState.tiles)\n    }\n  }\n\n  getGameState(): void {\n    this.gameStateService.getGameState()\n      .subscribe(gameState => this.gameState = gameState)\n  }\n\n  static clone(arr) {\n    let newArray = []\n    arr.forEach((row, index) => {\n      newArray.push(row.slice())\n    })\n    return newArray\n  }\n\n  setTileClasses(tile) {\n    let classes = {}\n    classes['valid'] = tile.isValid\n    classes['wonStreak'] = tile.isPartOfWinStreak\n    let playerStr = 'player' + tile.player\n    classes[playerStr] = true\n    return classes\n  }\n\n  trackByFn(index: number, status: number[][]) {\n    return status[index]\n  }\n\n\n  nextTurn(turn: number) {\n    turn += 1\n    if (turn > this.gameState.numOfPlayers)\n      turn = 1\n    return turn\n  }\n\n  preTurn(turn: number) {\n    turn -= 1\n    if (turn <= 0)\n      turn = this.gameState.numOfPlayers\n    return turn\n  }\n\n  isOutOfBound(n: number) {\n    return (n < 0) || (n >= this.gameState.size)\n  }\n\n  updateIsValid(tile: Tile) {\n    tile.isValid = false\n    let end: number = this.gameState.size - 1\n    let rowPositions: number[] = [0, end, tile.r, tile.r]\n    let colPositions: number[] = [tile.c, tile.c, 0, end]\n    let rowOperators: number[] = [+1, -1, 0, 0]\n    let colOperators: number[] = [0, 0, +1, -1]\n    for (let i of Array(4).keys()) {\n      let row: number = rowPositions[i]\n      let col: number = colPositions[i]\n      let rowOptr: number = rowOperators[i]\n      let colOptr: number = colOperators[i]\n      for (let _ of Array(this.gameState.size)) {\n        let curTile: Tile = this.gameState.tiles[row][col]\n        if (curTile.player == 0) {\n          if (curTile.isValid == true) {\n            break\n          } else {\n            curTile.isValid = true\n            this.gameState.updatedIsValidTiles.push(curTile)\n            break\n          }\n        }\n        row += rowOptr\n        col += colOptr\n      }\n    }\n  }\n\n  checkWinCondition(tile: Tile) {\n    // left to right\n    // top to bottom\n    // top left to bottom right\n    // top right to bottom left\n    let hasWon = false\n    let rowPositions: number[] = [tile.r, tile.r-3, tile.r-3, tile.r-3]\n    let colPositions: number[] = [tile.c-3, tile.c, tile.c-3, tile.c+3]\n    let rowOperators: number[] = [0, +1, +1, +1]\n    let colOperators: number[] = [+1, 0, +1, -1]\n    for (let i of Array(4).keys()) {\n      let row: number = rowPositions[i]\n      let col: number = colPositions[i]\n      let rowOptr: number = rowOperators[i]\n      let colOptr: number = colOperators[i]\n      let count: number = 0\n      let streakIndices: Coordinate[] = []\n      for (let _ of Array(7)) {\n        if (!this.isOutOfBound(row) && !this.isOutOfBound(col)) {\n          if (this.gameState.tiles[row][col].player != tile.player) {\n            count = 0\n            if (streakIndices.length < this.FOUR)\n              streakIndices = [] \n          } else {\n            count += 1\n            streakIndices.push({\n              r: row,\n              c: col\n            })\n          }\n          if (count == this.FOUR) {\n            hasWon = true\n          }\n        }\n        row += rowOptr\n        col += colOptr\n      }\n      if (streakIndices.length >= this.FOUR) {\n        for (let streakIndex of streakIndices) {\n          this.gameState.tiles[streakIndex.r][streakIndex.c].isPartOfWinStreak = true\n        }\n      }\n    }\n    return hasWon\n  }\n\n  onLearningMode(): void {\n    this.gameState.learningMode = !this.gameState.learningMode\n  }\n\n  onMove(tile: Tile) {\n    if (this.gameState.gameEnded) {\n      return\n    }\n    if (tile.isValid) {\n      // For retract\n      this.gameState.preMoveTile = tile\n      this.gameState.updatedIsValidTiles = []\n      this.gameState.canRetract = true\n      this.gameState.availableMoves -= 1\n      tile.player = this.gameState.turn\n      this.updateIsValid(tile)\n      let hasWon: boolean = this.checkWinCondition(tile)\n      if (hasWon) {\n        console.log(tile.player + \" won!\")\n        Swal.fire({\n          title: \"Congratulations!\",\n          text: this.PLAYER_NAME[this.gameState.turn - 1] + \" won the game!\",\n        })\n        this.gameState.gameEnded = true\n        this.gameState.canRetract = false\n      }\n      this.gameState.turn = this.nextTurn(this.gameState.turn)\n\n      // Check if the board is full\n      if (this.gameState.availableMoves == 0) {\n        this.gameState.gameEnded = true\n        this.gameState.canRetract = false\n        Swal.fire({\n          title: \"Draw!\",\n          icon: \"info\",\n          showCancelButton: true,\n          confirmButtonText: \"Start a new game!\",\n          cancelButtonText: \"Close\"\n        })\n        .then((result) => {\n          if (result.isConfirmed)\n            this.onNewGame()\n        })\n      }\n    }\n  }\n\n  onRetract() {\n    this.gameState.canRetract = false\n    this.gameState.availableMoves += 1\n    this.gameState.turn = this.preTurn(this.gameState.turn)\n    for (let tile of this.gameState.updatedIsValidTiles) {\n      tile.isValid = false\n    }\n    this.gameState.preMoveTile.isValid = true\n    this.gameState.preMoveTile.player = 0\n  }\n\n  onNewGame() {\n    if (this.gameState.gameEnded) {\n      this.router.navigate(['/start'])\n    }\n    else {\n      Swal.fire({\n        title: \"Are you sure to start a new game?\",\n        text: \"You will not be able to recover the game progress!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, start a new game!\",\n        cancelButtonText: \"Cancel\"\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          this.router.navigate(['/start'])\n        }\n      })\n    }\n  }\n}\n","<section class=\"game\">\n    <div class=\"grid-x grid-padding-x\">\n        <div class=\"large-6 medium-6 small-6 cell\">\n            <div class=\"turn\">Turn: \n                <div id=\"player_color\" \n                    [ngClass]=\"'player' + gameState.turn\">\n                </div> \n                <span class=\"name\"></span>\n            </div>\n        </div>\n        <div class=\"large-6 medium-6 small-6 cell\">\n            <a id=\"retract\" \n                [hidden]=\"!gameState.canRetract\"\n                [ngClass]=\"'player' + preTurn(gameState.turn)\"\n                (click)=\"onRetract()\">\n                Retract\n            </a>\n        </div>\n    </div>\n    <div class=\"grid-x grid-padding-x\">\n        <div class=\"cell\">\n            <div #wrapper class=\"wrapper square\" [ngClass]=\"{'learningMode': gameState.learningMode}\">\n                <div class=\"grid-y\">\n                    <div class=\"cell auto\" *ngFor=\"let row of gameState.tiles;\">\n                        <div class=\"grid-x gird-y\" style=\"height: 100%;\">\n                            <div *ngFor=\"let tile of row;\" \n                                (click)=\"onMove(tile)\"\n                                [ngClass]=\"setTileClasses(tile)\"\n                                ngCloak\n                                class=\"check cell auto\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n<div class=\"grid-x grid-padding-x grid-padding-y\">\n    <div class=\"cell large-auto medium-auto\">\n        <div class=\"button pink_button\" \n            id=\"learning_mode\" \n            [ngClass]=\"{'checked': gameState.learningMode}\"\n            (click)=\"onLearningMode()\">\n            Learning Mode: {{ gameState.learningMode ? \"On\" : \"Off\" }}\n        </div>\n    </div>\n    <div class=\"cell large-auto medium-auto\">\n        <div routerLink=\"/how-to-play\" class=\"button\">How to Play</div>\n    </div>\n</div>\n\n<div class=\"grid-x grid-padding-x grid-padding-y\">\n    <div class=\"cell large-auto medium-auto\">\n        <div class=\"button transparent\" (click)=\"onNewGame()\">New Game</div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { GameComponent } from './game/game.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { StarterComponent } from './starter/starter.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/start', pathMatch: 'full' },\r\n  { path: 'start', component: StarterComponent },\r\n  { path: 'game', component: GameComponent },\r\n  { path: 'how-to-play', component: HelpComponent },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}